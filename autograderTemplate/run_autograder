#!/usr/bin/env bash

# Get common setup variables (repository information)
cd /autograder/source
source setup_variables.sh

# Set up autograder files
SOURCE_DIR="${AUTOGRADER_DIR}/source"
RESULT_DIR="${AUTOGRADER_DIR}/results"
SUBMISSION_DIR="${AUTOGRADER_DIR}/submission"


# Make sure mAutograde and tests are up to date
cd "${MAUTOGRADE_DIR}"
git pull
cd "${MAUTOGRADE_TESTS_DIR}"
git pull

# Stage submission
cp "${SUBMISSION_DIR}"/* "${SOURCE_DIR}"
cd "${SOURCE_DIR}"

# Run tests
octave --no-gui --eval "mautogradeSuiteRunTests $MAUTOGRADE_TESTS_DIR" > "${RESULT_DIR}"/results.json

# Additionally, we can allow custom additions to the results, as desired by a user's implementation.
# Create and implement the following function in whatever directory generates the autograder.zip file.
# ./mautograder_additional_tests.py "${RESULT_DIR}"/results.json

# For more flexibility, check if we have put an updated version of mautograder_additional_tests.py in the tests directory
# and copy it here / overwrite
if [ -f "${MAUTOGRADE_TESTS_DIR}"/mautograder_additional_tests.py ]; then
    echo "Copying updated mautograder_additional_tests.py from tests folder..."
    cp "${MAUTOGRADE_TESTS_DIR}"/mautograder_additional_tests.py .
else
    echo "No mautograder_additional_tests.py update in TESTS_DIR found, skipping..."
fi

# and additionally, only run the additional tests if EITHER they were provided as above in the tests dir or were included in the autograder.zip upload.
if [ -f mautograder_additional_tests.py ]; then
    echo "Running mautograder_additional_tests..."
    ./mautograder_additional_tests.py "${RESULT_DIR}"/results.json
else
    echo "No mautograder_additional_tests.py found, no additional tests run."
fi

# ./mautograder_additional_tests.py "${RESULT_DIR}"/results.json